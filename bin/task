#!/bin/bash

# Default file path
default_file="plan.md"
file_to_use=$default_file

# Check if path parameter is provided
if [ -n "$1" ]; then
    # Check if input is alphanumeric with underscores
    if [[ "$1" =~ ^[a-zA-Z0-9_]+$ ]]; then
        # Find the most recent filename containing the input in changelog directory
        match_file=$(find ./context/changelog -type f -name "*$1*" | sort -r | head -n 1)
        
        if [ -n "$match_file" ]; then
            # Extract just the filename to display
            filename=$(basename "$match_file")
            # Ask user for confirmation
            read -p "Process task in plan file $filename? [Y/n] " response
            
            # Default to Y if no response
            response=${response:-Y}
            
            if [[ "$response" =~ ^[Yy]$ ]]; then
                file_to_use=$match_file
            else
                echo "Exiting..."
                exit 0
            fi
        fi
    elif [ -f "$1" ]; then
        # If the provided path exists, use it
        file_to_use=$1
    fi
else
    # Check if default file exists
    if [ ! -f "$default_file" ]; then
        echo "Error: Default file '$default_file' does not exist. Please provide a valid file path."
        exit 1
    fi
fi

# Run claude with the appropriate file
claude --dangerously-skip-permissions "
Read $file_to_use.
Edit the plan and mark the first queued task as dequeued. 
Complete that task. 
Leave the task in the dequeued state.
Do not move the task to verified.
If the task was already completed, make sure to mark it as dequeued.
"
