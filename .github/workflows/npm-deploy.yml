name: NPM Deploy

on:
  push:
    branches:
      - main
    tags: 
      - deploy-*

env:
  PROJECT_ENV: meta
  PROJECT_SERVICE: libraries

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: NPM Deploy
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22 # Includes npm >= 11.5.1 for OIDC support
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm whoami || echo "Not authenticated"
      - run: lerna publish from-package --no-private --yes --registry=https://registry.npmjs.org/ --concurrency 1
  lint:
    name: Lint (in parallel)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run lint
  typecheck:
    name: Type Check
    continue-on-error: true
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run typecheck
  test:
    name: Unit Test (in parallel)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - name: Vitest with Optional Datadog Tracing
        run: |
          if [[ -n "${{ secrets.DATADOG_CICD_API_KEY }}" ]]; then
            echo "Run tests with Datadog tracing"
            npm install dd-trace --save-dev
            export DD_CIVISIBILITY_AGENTLESS_ENABLED=true
            export DD_API_KEY=${{ secrets.DATADOG_CICD_API_KEY }}
            export DD_SITE=datadoghq.com
            # Additional steps to test CDK, still using CommonJS :(
            npm --prefix packages/cdk install
            NODE_OPTIONS='--import dd-trace/register.js -r dd-trace/ci/init' DD_ENV=${{ env.PROJECT_ENV }} DD_SERVICE=${{ env.PROJECT_SERVICE }} npm run test
            NODE_OPTIONS='--import dd-trace/register.js -r dd-trace/ci/init' DD_ENV=${{ env.PROJECT_ENV }} DD_SERVICE=${{ env.PROJECT_SERVICE }} npm --prefix packages/cdk run test
          else
            npm test
          fi
  test-llm-client:
    name: LLM Client Test (conditional)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Run LLM Client Tests
        run: npm run test:llm:client
        env:
          APP_PROVIDER: anthropic,openai
          ANTHROPIC_API_KEY: ${{ secrets.CICD_ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.CICD_OPENAI_API_KEY }}
